package top.krasus1966.news.api.controller.user;

import org.springframework.web.bind.annotation.GetMapping;

/**
 * api的作用：
 * api就相当于企业的领导，老板，部门经理
 * 其他的服务层都是实现，他们就相当于员工，只做事情
 * 老板（开发人员）来看一下每个人（服务）的进度，做什么事。
 * 老板不会去问员工，他追回对接部门经理
 * 那么这个里的所有的api 接口就是统一在这里进行管理和调度的，微服务也是如此
 * <p>
 * 运作：
 * 现在的所有借口都在此暴露，实现都是在各自的微服务中
 * 本项目只写接口，不写实现，是现在各自的微服务工程中，因为以业务来划分的微服务有很多
 * controller也会分散在各个微服务工程中，一旦多了就很难统一管理与查看
 * <p>
 * 其次，微服务之间的调用都是基于接口的
 * 如果不这么做，微服务之间的调用就需要相互依赖了，
 * 耦合度也就高了，接口的目的为了能够提供解耦
 * <p>
 * 此外，此工程的接口其实就是一套规范，实现都是由各自的工程去做的处理
 * 目前我们使用springboot作为接口的实现。
 * <p>
 * 如果未来以后出现新的java web框架，那我们不需要修改接口，
 * 只需要去修改对应的实现就可以了。这其实也是解耦的一个体现。
 * <p>
 * Swagger2，基于接口的自动文档生成。
 * 所有的配置文件只需要一份，就能在当前项目中去构建了。
 * 管理起来很方便
 * <p>
 * 综上所述，如此的做法，可以提高多服务的项目可扩展性。
 *
 * @author Krasus1966
 * @date 2020/10/8 20:47
 **/
public interface HelloControllerApi {

    @GetMapping("/")
    public String hello();
}
